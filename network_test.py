#!/usr/bin/env python3
"""
Script ki·ªÉm tra k·∫øt n·ªëi m·∫°ng cho Hit & Dodge P2P
Gi√∫p debug v·∫•n ƒë·ªÅ k·∫øt n·ªëi
"""
import socket
import sys

def get_local_ip():
    """L·∫•y IP address trong m·∫°ng LAN"""
    try:
        # Method 1: Connect to external server
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        try:
            # Method 2: Get hostname
            hostname = socket.gethostname()
            local_ip = socket.gethostbyname(hostname)
            return local_ip
        except:
            return None

def test_port(port=12345):
    """Ki·ªÉm tra xem port c√≥ m·ªü ƒë∆∞·ª£c kh√¥ng"""
    try:
        test_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        test_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        test_socket.bind(('0.0.0.0', port))
        test_socket.close()
        return True, "OK"
    except Exception as e:
        return False, str(e)

def test_connection_to_host(host_ip, port=12345):
    """Ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn host"""
    try:
        print(f"\nüîç ƒêang ki·ªÉm tra k·∫øt n·ªëi ƒë·∫øn {host_ip}:{port}...")
        test_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        test_socket.settimeout(5)
        test_socket.connect((host_ip, port))
        test_socket.close()
        return True, "K·∫øt n·ªëi th√†nh c√¥ng!"
    except socket.timeout:
        return False, "Timeout - Host kh√¥ng ph·∫£n h·ªìi"
    except ConnectionRefusedError:
        return False, "Connection refused - Host ch∆∞a m·ªü server ho·∫∑c firewall ƒëang ch·∫∑n"
    except Exception as e:
        return False, f"L·ªói: {e}"

def main():
    print("=" * 60)
    print("HIT & DODGE - NETWORK DIAGNOSTIC TOOL")
    print("=" * 60)
    
    # Get local IP
    local_ip = get_local_ip()
    print(f"\nüì° IP Address c·ªßa m√°y n√†y: {local_ip}")
    
    if local_ip:
        if local_ip.startswith('127.'):
            print("‚ö†Ô∏è  C·∫¢NH B√ÅO: IP l√† localhost, c√≥ th·ªÉ kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c qua m·∫°ng")
            print("   Ki·ªÉm tra k·∫øt n·ªëi WiFi/LAN c·ªßa b·∫°n")
        else:
            print("‚úÖ IP h·ª£p l·ªá - Chia s·∫ª IP n√†y v·ªõi b·∫°n b√® ƒë·ªÉ h·ªç join")
    else:
        print("‚ùå Kh√¥ng th·ªÉ l·∫•y IP address")
    
    # Test port
    print(f"\nüîå Ki·ªÉm tra port 12345...")
    can_bind, msg = test_port(12345)
    if can_bind:
        print(f"‚úÖ Port 12345 s·∫µn s√†ng - C√≥ th·ªÉ t·∫°o ph√≤ng host")
    else:
        print(f"‚ùå Port 12345 ƒëang b·∫≠n - {msg}")
        print("   Th·ª≠ ƒë√≥ng c√°c ch∆∞∆°ng tr√¨nh kh√°c ho·∫∑c ch·ªù v√†i gi√¢y")
    
    # Test connection to host (if provided)
    print("\n" + "=" * 60)
    test_host = input("\nüéÆ Nh·∫≠p IP c·ªßa host ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi (Enter ƒë·ªÉ b·ªè qua): ").strip()
    
    if test_host:
        success, msg = test_connection_to_host(test_host, 12345)
        if success:
            print(f"‚úÖ {msg}")
            print("   B·∫°n c√≥ th·ªÉ join v√†o ph√≤ng c·ªßa host n√†y!")
        else:
            print(f"‚ùå {msg}")
            print("\nüí° G·ª£i √Ω kh·∫Øc ph·ª•c:")
            print("   1. ƒê·∫£m b·∫£o host ƒë√£ ch·∫°y game v√† t·∫°o ph√≤ng")
            print("   2. Ki·ªÉm tra c·∫£ 2 m√°y c√πng m·∫°ng WiFi/LAN")
            print("   3. T·∫Øt firewall t·∫°m th·ªùi ƒë·ªÉ test")
            print("   4. Th·ª≠ ping IP c·ªßa host: ping", test_host)
    
    print("\n" + "=" * 60)
    print("\nüìù H∆Ø·ªöNG D·∫™N CH∆†I:")
    print("   HOST:")
    print(f"   1. Ch·∫°y: python p2p_multiplayer.py")
    print(f"   2. T·∫°o ph√≤ng v√† chia s·∫ª IP: {local_ip}")
    print(f"   3. Chia s·∫ª m√£ ph√≤ng 4 k√Ω t·ª±")
    print()
    print("   CLIENT:")
    print(f"   1. Ch·∫°y: python p2p_multiplayer.py")
    print(f"   2. Nh·∫≠p IP c·ªßa host: {local_ip if local_ip else '[IP c·ªßa host]'}")
    print(f"   3. Nh·∫≠p m√£ ph√≤ng 4 k√Ω t·ª±")
    print(f"   4. Click THAM GIA")
    print()
    print("‚ö†Ô∏è  L∆ØU √ù:")
    print("   - T·∫Øt firewall n·∫øu kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c")
    print("   - C·∫£ 2 m√°y ph·∫£i c√πng m·∫°ng WiFi/LAN")
    print("   - Port m·∫∑c ƒë·ªãnh: 12345")
    print("=" * 60)

if __name__ == "__main__":
    main()
